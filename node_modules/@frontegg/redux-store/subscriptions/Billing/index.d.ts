import { FronteggState, RestApi, SharedActions } from '../../interfaces';
import { DeepPartial } from '../../types';
import { BillingState } from './interfaces';
import { buildInformationActions } from './Information';
import { buildInvoicesActions } from './Invoices';
import { buildPaymentMethodActions } from './PaymentMethod';
import { buildSubscriptionActions } from './Subscription';
export declare const createBillingState: (overrideState?: DeepPartial<BillingState>) => BillingState;
export declare const buildBillingActions: (store: FronteggState, api: RestApi, actions: SharedActions) => [BillingActions, BillingStateActions];
export type BillingActions = ReturnType<typeof buildInformationActions> & ReturnType<typeof buildInvoicesActions> & ReturnType<typeof buildPaymentMethodActions> & ReturnType<typeof buildSubscriptionActions>;
export type BillingStateActions = {
    information: ReturnType<typeof buildInformationActions>;
    invoices: ReturnType<typeof buildInvoicesActions>;
    paymentMethod: ReturnType<typeof buildPaymentMethodActions>;
    subscription: ReturnType<typeof buildSubscriptionActions>;
};
