import { FronteggState, RestApi, SharedActions, WithRetryConfig } from '../../../interfaces';
import { DeleteSSOConfigurationPayload, SaveSSOConfigurationByDataPayload, SaveSSOConfigurationByMetadataPayload, SaveSSOConfigurationByUrlPayload, SaveSSOConfigurationPayloadV2, SaveSSODomainPayload, SetSSOGroupsPayload, UpdateSSOConfigurationByMetadataPayload, UpdateSSOConfigurationPayload, UpdateSSODefaultRolesPayload, UpdateSSOGroupsPayload, ValidateSSODomainPayload } from '../interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    loadSSOConfigurationsV2: (payload?: WithRetryConfig<{}>) => Promise<void>;
    saveSSOConfigurationV2: (payload: SaveSSOConfigurationPayloadV2) => Promise<void>;
    updateSSOConfiguration: (payload: UpdateSSOConfigurationPayload) => Promise<void>;
    deleteSSOConfiguration: (payload: DeleteSSOConfigurationPayload) => Promise<void>;
    saveSSODomain: (payload: SaveSSODomainPayload) => Promise<void>;
    deleteSSODomain: (payload: ValidateSSODomainPayload) => Promise<void>;
    validateSSODomainV2: (payload: ValidateSSODomainPayload) => Promise<void>;
    setSSOGroups: (payload: SetSSOGroupsPayload) => Promise<void>;
    updateSSOGroups: (payload: UpdateSSOGroupsPayload) => Promise<void>;
    setSSODefaultRoles: (payload: UpdateSSODefaultRolesPayload) => Promise<void>;
    saveSSOConfigurationByMetadata: (payload: SaveSSOConfigurationByMetadataPayload) => Promise<void>;
    updateSSOConfigurationByMetadata: (payload: UpdateSSOConfigurationByMetadataPayload) => Promise<void>;
    saveSSOConfigurationByUrl: (payload: SaveSSOConfigurationByUrlPayload) => Promise<void>;
    saveSSOConfigurationByData: (payload: SaveSSOConfigurationByDataPayload) => Promise<void>;
};
export default _default;
