"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _state = require("./state");
var _helpers = require("../../helpers");
var _restApi = require("@frontegg/rest-api");
var _default = (store, api, sharedActions) => {
  const setUnlockAccountState = state => {
    Object.assign(store.auth.unlockAccountState, state);
  };
  const resetUnlockAccountState = () => {
    (0, _helpers.deepResetState)(store, ['auth', 'activateAccountState'], _state.initialState);
  };
  const unlockAccount = async _payload => {
    const {
      token
    } = _payload;
    const onRedirectTo = _restApi.ContextHolder.for(store.root.appName).onRedirectTo;
    const routes = store.auth.routes;
    setUnlockAccountState({
      loading: true
    });
    try {
      await api.users.unlockMe({
        token
      });
      setUnlockAccountState({
        loading: false,
        error: undefined,
        unlockAccountSuccess: true
      });
      await (0, _helpers.delay)(5000);
      onRedirectTo(routes.loginUrl);
    } catch (e) {
      setUnlockAccountState({
        loading: false,
        error: (0, _helpers.errorHandler)(e)
      });
    }
  };
  return {
    setUnlockAccountState,
    resetUnlockAccountState,
    unlockAccount
  };
};
exports.default = _default;