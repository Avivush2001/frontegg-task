import { BaseApiClient } from '../BaseApiClient';
import { IUserApplicationsIdPayload, IUserApplicationsDataPayload, IApplicationsResponse, IAssignUserToApplicationsBody, IUsersApplicationsIdPayload, IUsersOfApplicationsResponse, ITenantApplicationsResponse, IGetUsersOfApplicationsQuery, IUsersApplicationsIdsResponse } from './interfaces';
/**
 * UsersApplicationsApi class for handling applications-related operations.
 */
export declare class ApplicationsApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Get applications id array for a single user by user id.
     * @param {IUserApplicationsIdPayload} param0 - user id to find their applications id array.
     * @returns {Promise<string[]>} all app ids as string[].
     */
    getUserApplicationsId: ({ userId }: IUserApplicationsIdPayload) => Promise<string[]>;
    /**
     * Get applications id array for multiple users by user id array.
     * @param {IUsersApplicationsIdPayload} param0 - array of all user ids.
     * @returns {Promise<IUsersApplicationsIdsResponse[]>} object that maps every user id to its applications id array.
     */
    getUsersApplicationsId: ({ userIds, }: IUsersApplicationsIdPayload) => Promise<IUsersApplicationsIdsResponse[]>;
    /**
     * Get applications data array for a specific tenant.
     * @returns {Promise<ITenantApplicationsResponse[]>} array of objects with tenant id and its applications id array.
     */
    getTenantsApplications: () => Promise<ITenantApplicationsResponse[]>;
    /**
     * Get applications data by array of application ids.
     * @param {IUserApplicationsDataPayload} param0 - array of application ids.
     * @returns {Promise<IApplicationsResponse[]>} array of application data.
     */
    getApplicationsData: ({ appIds, includeFreeAccess, }: IUserApplicationsDataPayload) => Promise<IApplicationsResponse[]>;
    /**
     * Assign user to multiple applications.
     * @param {IAssignUserToApplicationsBody} body - assignment details.
     * @returns {Promise<void>}
     */
    assignUserToApplications: (body: IAssignUserToApplicationsBody) => Promise<void>;
    /**
     * Unassign user from multiple applications.
     * @param {IAssignUserToApplicationsBody} body - unassignment details.
     * @returns {Promise<void>}
     */
    unassignUserFromApplications: (body: IAssignUserToApplicationsBody) => Promise<void>;
    /**
     * Get users array for each application for an array of applications.
     * @param {IGetUsersOfApplicationsQuery} param0 - array of applications.
     * @returns {Promise<IUsersOfApplicationsResponse[]>} array of objects with application id and its users array.
     */
    getUsersOfApplications: ({ appIds, }: IGetUsersOfApplicationsQuery) => Promise<IUsersOfApplicationsResponse[]>;
}
declare const _default: ApplicationsApi;
export default _default;
