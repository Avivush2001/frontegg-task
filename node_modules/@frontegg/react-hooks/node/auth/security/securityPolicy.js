"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSecurityPolicyActions = exports.usePublicPolicySettings = exports.usePublicAuthStrategiesPolicySettings = void 0;
exports.useSecurityPolicyState = useSecurityPolicyState;
var _react = require("react");
var _FronteggStoreContext = require("../../FronteggStoreContext");
var _useSnapshot = require("../../useSnapshot");
const defaultMapper = state => state;
// @deprecated use useSecurityPolicyState() instead
function useSecurityPolicyState(stateMapper = defaultMapper) {
  const state = (0, _FronteggStoreContext.useStore)().store.auth.securityPolicyState;
  return stateMapper((0, _useSnapshot.useSnapshot)(state));
}
const useSecurityPolicyActions = () => {
  return (0, _FronteggStoreContext.useStore)().stateActions.auth.securityPolicyActions;
};
exports.useSecurityPolicyActions = useSecurityPolicyActions;
const usePublicPolicySettings = (loadOnMount = false) => {
  const {
    publicPolicy
  } = useSecurityPolicyState();
  const {
    loadPublicSecurityPolicy
  } = useSecurityPolicyActions();
  (0, _react.useEffect)(() => {
    (loadOnMount || !publicPolicy.policy) && loadPublicSecurityPolicy();
  }, [loadOnMount, loadPublicSecurityPolicy]);
  return publicPolicy;
};
exports.usePublicPolicySettings = usePublicPolicySettings;
const usePublicAuthStrategiesPolicySettings = (loadOnMount = false) => {
  const {
    publicAuthStrategyPolicy
  } = useSecurityPolicyState();
  const {
    loadPublicAuthStrategiesPolicy
  } = useSecurityPolicyActions();
  (0, _react.useEffect)(() => {
    (loadOnMount || !publicAuthStrategyPolicy.policy) && !publicAuthStrategyPolicy.error && loadPublicAuthStrategiesPolicy();
  }, [loadOnMount, loadPublicAuthStrategiesPolicy]);
  return publicAuthStrategyPolicy;
};
exports.usePublicAuthStrategiesPolicySettings = usePublicAuthStrategiesPolicySettings;