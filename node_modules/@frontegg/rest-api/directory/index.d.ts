import { Scim2ConnectionConfigResponse, Scim2CountResponse, Scim2CreateConnectionConfigRequest, Scim2CreateConnectionConfigResponse, Scim2PatchConnectionConfigRequest } from './interfaces';
import { BaseApiClient } from '../BaseApiClient';
export declare class DirectoryApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Returns all SCIM2 configurations
     *
     * ``authorized user``
     */
    getConfigs: () => Promise<Scim2ConnectionConfigResponse[]>;
    /**
     * Update SCIM2 configuration
     *
     * ``authorized user``
     */
    updateConfiguration: (id: string, body: Scim2PatchConnectionConfigRequest) => Promise<void>;
    /**
     * Create SCIM2 configuration
     *
     * ``authorized user``
     */
    createConfiguration: (body: Scim2CreateConnectionConfigRequest) => Promise<Scim2CreateConnectionConfigResponse>;
    /**
     * Delete SCIM2 configuration
     *
     * ``authorized user``
     */
    deleteConfiguration: (id: string, deleteAll: boolean) => Promise<void>;
    countConfigurationUsers: (id: string) => Promise<Scim2CountResponse>;
}
declare const _default: DirectoryApi;
export default _default;
