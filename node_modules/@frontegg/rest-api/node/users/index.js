"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.UsersApi = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _constants = require("../constants");
var _BaseApiClient = require("../BaseApiClient");
class UsersApi extends _BaseApiClient.BaseApiClient {
  constructor(appName) {
    super(appName);
    this.GetUserJwt = async body => {
      return this.post(`${_constants.urls.identity.users.v3}/me/token`, body);
    };
    this.getUsersV2 = async (queryParams, options) => {
      return this.get(_constants.urls.identity.users.v2, queryParams, {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.getUsersV3 = async (queryParams, options) => {
      return this.get(_constants.urls.identity.users.v3, queryParams, {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.getUsersRoles = async (queryParams, options) => {
      return this.get(_constants.urls.identity.users.roles.v3, (0, _extends2.default)({}, queryParams, {
        ids: queryParams.ids.join(',')
      }), {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.getUsersGroups = async (queryParams, options) => {
      return this.get(_constants.urls.identity.users.groups.v3, (0, _extends2.default)({}, queryParams, {
        ids: queryParams.ids.join(',')
      }), {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.getCurrentUserTenantsV3 = async options => {
      return this.get(_constants.urls.identity.users.tenants.me.v3, undefined, {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.getCurrentUserTenantsV1 = async options => {
      return this.get(_constants.urls.identity.users.tenants.me.v1, undefined, {
        headers: this.extractHeadersFromOptions(options)
      });
    };
    this.sendResetBreachedPasswordEmails = async () => {
      return this.post(_constants.urls.identity.users.passwords.resetBreachedPasswords.v1);
    };
    this.updateUserProfileV2 = async body => {
      return this.put(`${_constants.urls.identity.users.v2}/me`, body);
    };
    this.unlockMe = async body => {
      return this.post(`${_constants.urls.identity.users.v3}/me/unlock`, body);
    };
  }
}
exports.UsersApi = UsersApi;
var _default = new UsersApi('default');
exports.default = _default;