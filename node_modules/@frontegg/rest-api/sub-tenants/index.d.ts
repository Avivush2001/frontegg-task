import { PaginationResult, UserJwtOptions } from '../interfaces';
import { BaseApiClient } from '../BaseApiClient';
import { AddUsersToSubTenantRequest, AddUserToSubTenantsRequest, CreateSubTenantRequest, CreateSubTenantResponse, ILoadAllUsers, ISubTenantUser, RemoveUserFromSubTenantsRequest, UpdateSubAccountAccessRequestDto, UpdateSubTenantHierarchySettingsRequest, UpdateSubTenantManagementRequest, UpdateSubTenantRequest, UpdateSubTenantRequestParams, UpdateUserRolesForSubTenantsRequestDto } from './interfaces';
export declare class SubTenantsApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Loads all users based on given parameters.
     */
    loadAllUsers: (params: ILoadAllUsers) => Promise<PaginationResult<ISubTenantUser>>;
    /**
     * Adds a user to a tenant and its sub-tenants.
     */
    addUserToTenantAndSubTenants: (body: AddUserToSubTenantsRequest) => Promise<void>;
    /**
     * Removes a user from a tenant and its sub-tenants.
     */
    removeUserFromTenantAndSubTenants: (body: RemoveUserFromSubTenantsRequest, options?: UserJwtOptions) => Promise<void>;
    /**
     * Adds user roles for sub-tenants.
     */
    addUserRolesForSubTenants: (userId: string, body: UpdateUserRolesForSubTenantsRequestDto, options?: UserJwtOptions) => Promise<void>;
    /**
     * Removes user roles from sub-tenants.
     */
    removeUserRolesFromSubTenants: (userId: string, body: UpdateUserRolesForSubTenantsRequestDto, options?: UserJwtOptions) => Promise<void>;
    /**
     * Sets user roles for sub-tenants.
     */
    setUserRolesForSubTenants: (userId: string, body: UpdateUserRolesForSubTenantsRequestDto, options?: UserJwtOptions) => Promise<void>;
    /**
     * Creates a new sub-tenant.
     */
    createSubTenant: (body: CreateSubTenantRequest, options?: UserJwtOptions) => Promise<CreateSubTenantResponse>;
    /**
     * Deletes a sub-tenant.
     */
    deleteSubTenant: (tenantId: string, options?: UserJwtOptions) => Promise<void>;
    /**
     * Updates sub-tenant information.
     */
    updateSubTenant: ({ tenantId }: UpdateSubTenantRequestParams, body: UpdateSubTenantRequest, options?: UserJwtOptions) => Promise<void>;
    /**
     * Updates sub-tenant management information.
     */
    updateSubTenantManagement: ({ tenantId }: UpdateSubTenantRequestParams, body: UpdateSubTenantManagementRequest, options?: UserJwtOptions) => Promise<CreateSubTenantResponse>;
    updateSubTenantHierarchySettings({ tenantId }: UpdateSubTenantRequestParams, body: UpdateSubTenantHierarchySettingsRequest, options?: UserJwtOptions): Promise<CreateSubTenantResponse>;
    /**
     * Updates sub-account access.
     */
    updateSubAccountAccess: (userId: string, body: UpdateSubAccountAccessRequestDto, options?: UserJwtOptions) => Promise<void>;
    /**
     * Adds multiple users to a sub-tenant.
     */
    addUsersToSubTenant: (body: AddUsersToSubTenantRequest, options?: UserJwtOptions) => Promise<void>;
}
declare const _default: SubTenantsApi;
export default _default;
