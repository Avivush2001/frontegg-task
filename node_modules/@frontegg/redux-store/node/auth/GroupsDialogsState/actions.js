"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _helpers = require("../../helpers");
var _state = require("./state");
var _default = (store, api, sharedActions) => {
  const setGroupsDialogsState = payload => {
    Object.assign(store.auth.groupsDialogsState, payload);
  };
  const resetGroupsDialogsState = () => {
    (0, _helpers.deepResetState)(store, ['auth', 'groupsDialogsState'], _state.initialState);
  };
  const openAddGroupDialog = () => {
    store.auth.groupsDialogsState.addGroupDialogState.open = true;
  };
  const closeAddGroupDialog = () => {
    Object.assign(store.auth.groupsDialogsState.addGroupDialogState, {
      open: false,
      group: undefined
    });
  };
  const openAddMembersToGroupDialog = () => {
    store.auth.groupsDialogsState.addMembersToGroupDialogState.open = true;
  };
  const closeAddMembersToGroupDialog = () => {
    Object.assign(store.auth.groupsDialogsState.addMembersToGroupDialogState, {
      open: false,
      userIds: []
    });
  };
  const openEditGroupDialog = payload => {
    Object.assign(store.auth.groupsDialogsState.editGroupDialogState, (0, _extends2.default)({}, payload, {
      open: true
    }));
  };
  const closeEditGroupDialog = () => {
    Object.assign(store.auth.groupsDialogsState.editGroupDialogState, {
      open: false,
      loading: false,
      group: undefined
    });
  };
  const openDeleteGroupDialog = payload => {
    Object.assign(store.auth.groupsDialogsState.deleteGroupDialogState, (0, _extends2.default)({}, payload, {
      open: true
    }));
  };
  const closeDeleteGroupDialog = () => {
    Object.assign(store.auth.groupsDialogsState.deleteGroupDialogState, {
      open: false,
      loading: false,
      group: undefined
    });
  };
  const openDeleteMemberFromGroupDialog = payload => {
    Object.assign(store.auth.groupsDialogsState.deleteMemberFromGroupDialogState, payload);
  };
  const closeDeleteMemberFromGroupDialog = () => {
    Object.assign(store.auth.groupsDialogsState.deleteMemberFromGroupDialogState, {
      open: false,
      userId: undefined,
      email: undefined
    });
  };
  return {
    setGroupsDialogsState,
    resetGroupsDialogsState,
    openAddGroupDialog,
    closeAddGroupDialog,
    openAddMembersToGroupDialog,
    closeAddMembersToGroupDialog,
    openEditGroupDialog,
    closeEditGroupDialog,
    openDeleteGroupDialog,
    closeDeleteGroupDialog,
    openDeleteMemberFromGroupDialog,
    closeDeleteMemberFromGroupDialog
  };
};
exports.default = _default;