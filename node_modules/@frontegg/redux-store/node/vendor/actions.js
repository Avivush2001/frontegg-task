"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _state = require("./state");
var _helpers = require("../helpers");
var _default = (store, api, sharedActions) => {
  const setVendorState = state => {
    Object.assign(store.vendor, state);
  };
  const resetVendorState = () => {
    (0, _helpers.deepResetState)(store, ['vendor'], _state.initialState);
  };
  const loadVendorPublicInfo = async payload => {
    setVendorState({
      loading: true
    });
    try {
      var _vendorInfo$whiteLabe;
      const vendorInfo = await (0, _helpers.retryIfNeeded)(() => api.vendor.getVendorPublicInfo(), payload == null ? void 0 : payload.retryConfig);
      vendorInfo.whiteLabelMode = (_vendorInfo$whiteLabe = vendorInfo.whiteLabelMode) != null ? _vendorInfo$whiteLabe : false;
      setVendorState((0, _extends2.default)({}, vendorInfo, {
        loading: false
      }));
    } catch (e) {
      setVendorState({
        loading: false
      });
      console.error('failed to getVendorPublicInfo - ', e);
    }
  };
  return {
    setVendorState,
    resetVendorState,
    loadVendorPublicInfo,
    /**
     * @deprecated use loadVendorPublicInfo instead
     */
    loadVendorPublicConfiguration: loadVendorPublicInfo
  };
};
exports.default = _default;