import { FronteggState, RestApi, RetryConfig, SharedActions, WithCallback, WithId, WithRetryConfig } from '../../interfaces';
import { Scim2ConnectionConfigResponse, Scim2CreateConnectionConfigRequest, Scim2CreateConnectionConfigResponse, Scim2PatchConnectionConfigRequest } from '@frontegg/rest-api';
import { ProvisioningState } from './interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    setProvisioningState: (state: Partial<ProvisioningState>) => void;
    resetProvisioningState: () => void;
    __loadCountForConnection: (connection: Scim2ConnectionConfigResponse, retryConfig?: RetryConfig) => Promise<{
        count: number;
        id: string;
        connectionName: string;
        source: import("@frontegg/rest-api").ScimConnectionSource;
        syncToUserManagement: boolean;
        createdAt: Date;
        lastSync?: Date | null;
    }>;
    loadProvisionConnections: (payload?: WithRetryConfig<{}>) => Promise<void>;
    createProvisionConnection: (payload: WithCallback<Scim2CreateConnectionConfigRequest, Scim2CreateConnectionConfigResponse>) => Promise<void>;
    deleteProvisionConnection: (payload: WithCallback<WithId & {
        deleteAll: boolean;
    }>) => Promise<void>;
    updateProvisionConnection: (payload: WithId<Scim2PatchConnectionConfigRequest>) => Promise<void>;
};
export default _default;
