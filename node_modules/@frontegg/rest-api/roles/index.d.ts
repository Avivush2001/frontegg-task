import { IRole, IRolePermission, IRolePermissionCategory, IAddRole, IDeleteRole, IUpdateRole, IAttachPermissionsToRole, IAttachPermissionToRoles, IAddRoleV2 } from './interfaces';
import { BaseApiClient } from '../BaseApiClient';
export declare class RolesApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Gets tenant related roles
     */
    getRoles: () => Promise<IRole[]>;
    /**
     * Adds tenant related roles
     * @param body - IAddRole
     */
    addRole: (body: IAddRole) => Promise<IRole>;
    /**
     * Deletes role given role ID
     */
    deleteRole: ({ roleId }: IDeleteRole) => Promise<void>;
    /**
     * Updates role using a given role ID and IUpdateRole object
     */
    updateRole: ({ roleId, ...body }: IUpdateRole) => Promise<IRole>;
    /**
     * Attaches permissions to role given a role ID
     */
    attachPermissionsToRole: ({ roleId, ...body }: IAttachPermissionsToRole) => Promise<IRole>;
    /**
     * Gets all vendor permissions
     */
    getPermissions: () => Promise<IRolePermission[]>;
    /**
     * Associate permission to roles
     */
    attachPermissionToRoles: ({ permissionId, ...body }: IAttachPermissionToRoles) => Promise<IRolePermission>;
    /**
     * Gets all vendor categories including the permissions
     */
    getPermissionCategories: () => Promise<IRolePermissionCategory[]>;
    /**
     * Adds tenant related roles v2
     * @param body - IAddRoleV2
     */
    addRoleV2: (body: IAddRoleV2) => Promise<IRole>;
}
declare const _default: RolesApi;
export default _default;
