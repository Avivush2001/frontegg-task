import { IImpersonate, IImpersonateResponse } from './interfaces';
import { BaseApiClient } from '../BaseApiClient';
/**
 * UsersApi class provides methods for handling user and impersonation-related API requests.
 */
export declare class ImpersonateApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Impersonating user should be called after creating actor token that contains information about impersonation.
     * `impersonate` should contain impersonated user info (userId, tenantId, and vendorId) and the actor token that was created for him to perform impersonation.
     *
     * @throws exception if impersonation failed
     */
    impersonate: (body: IImpersonate) => Promise<IImpersonateResponse>;
}
declare const _default: ImpersonateApi;
export default _default;
