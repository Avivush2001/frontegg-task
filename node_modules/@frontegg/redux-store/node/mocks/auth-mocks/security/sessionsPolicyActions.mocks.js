"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _SessionsPolicyState = require("../../../auth/Security/SessionsPolicyState");
var _helpers = require("../../helpers");
const _excluded = ["callback"];
var _default = (store, api, actions) => {
  const originalActions = (0, _SessionsPolicyState.buildSessionsPolicyActions)(store, api, actions);
  const mockedActions = (0, _helpers.mockActionsExpect)(originalActions, ['setSessionsPolicyState', 'resetSessionsPolicyState']);
  mockedActions.loadSessionsPolicy = async () => {
    mockedActions.setSessionsPolicyState({
      loading: true,
      error: null
    });
    const sessionPolicyState = store.auth.sessionsPolicyState;
    mockedActions.setSessionsPolicyState((0, _extends2.default)({}, sessionPolicyState, {
      loading: false
    }));
  };
  mockedActions.createOrUpdateSessionsPolicy = async payload => {
    const {
        callback
      } = payload,
      rest = (0, _objectWithoutPropertiesLoose2.default)(payload, _excluded);
    mockedActions.setSessionsPolicyState({
      loading: true,
      error: null
    });
    callback == null ? void 0 : callback(true);
    mockedActions.setSessionsPolicyState({
      configurations: rest,
      loading: false
    });
  };
  return mockedActions;
};
exports.default = _default;