import { GetCurrentUserTenantsResponse, GetUserGroupsParams, GetUserGroupsResponse, GetUserJwtRequestDto, GetUserJwtResponseDto, GetUserRolesResponse, GetUsersRolesParams, IGetUsersV2Response, ISearchUserQueryParamsV2, ISearchUserQueryParamsV3, IUnlockMeRequest, IUpdateUserDto, IUserProfile, IUsersV3Data } from './interfaces';
import { FronteggPaginationWrapper, UserJwtOptions } from '../interfaces';
import { BaseApiClient } from '../BaseApiClient';
export declare class UsersApi extends BaseApiClient {
    constructor(appName: string);
    GetUserJwt: (body: GetUserJwtRequestDto) => Promise<GetUserJwtResponseDto>;
    getUsersV2: (queryParams: ISearchUserQueryParamsV2, options?: UserJwtOptions) => Promise<FronteggPaginationWrapper<IGetUsersV2Response>>;
    getUsersV3: (queryParams: ISearchUserQueryParamsV3, options?: UserJwtOptions) => Promise<FronteggPaginationWrapper<IUsersV3Data>>;
    getUsersRoles: (queryParams: GetUsersRolesParams, options?: UserJwtOptions) => Promise<GetUserRolesResponse[]>;
    getUsersGroups: (queryParams: GetUserGroupsParams, options?: UserJwtOptions) => Promise<GetUserGroupsResponse[]>;
    /**
     * get user tenant and user tenants by user active tenant
     */
    getCurrentUserTenantsV3: (options?: UserJwtOptions) => Promise<GetCurrentUserTenantsResponse>;
    /**
     * get user tenant and user tenants by context tenant
     */
    getCurrentUserTenantsV1: (options?: UserJwtOptions) => Promise<GetCurrentUserTenantsResponse>;
    sendResetBreachedPasswordEmails: () => Promise<void>;
    updateUserProfileV2: (body: Partial<IUpdateUserDto>) => Promise<IUserProfile>;
    unlockMe: (body: IUnlockMeRequest) => Promise<void>;
}
declare const _default: UsersApi;
export default _default;
