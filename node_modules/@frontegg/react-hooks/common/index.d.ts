import { Dispatch, SetStateAction } from 'react';
import { FronteggAppInstance, FronteggAppOptions } from '@frontegg/types';
import type { FronteggState } from '@frontegg/redux-store';
import { FetchClient, FronteggApiClient } from '@frontegg/rest-api';
interface ShadowDomContextData extends FronteggAppOptions {
    injector: FronteggAppInstance;
    iframeRendering: boolean;
    renderByRoute?: boolean;
    slotsContainer: HTMLElement;
    rootEl: HTMLElement;
    staticRoute?: string;
    setStaticRouteSetter?: (action: Dispatch<SetStateAction<string | undefined>>) => void;
    isMultiApp?: boolean;
}
export interface DomContext extends ShadowDomContextData {
    isShadowDom: boolean;
    fetchClient: FetchClient;
    apiClient: FronteggApiClient;
    appName: string;
}
export declare const ShadowDomContext: import("react").Context<ShadowDomContextData>;
export declare const useShadowDom: () => DomContext;
export declare const useRootState: () => FronteggState["root"];
export * from './CustomComponentHolder';
