"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _helpers = require("../../../helpers");
var _state = require("./state");
const _excluded = ["callback"];
var _default = (store, api, sharedActions) => {
  const actions = sharedActions;
  const setSessionsPolicyState = state => {
    Object.assign(store.auth.sessionsPolicyState, state);
  };
  const resetSessionsPolicyState = () => {
    (0, _helpers.deepResetState)(store, ['auth', 'sessionsPolicyState'], _state.initialState);
  };
  const loadSessionsPolicy = async () => {
    setSessionsPolicyState({
      loading: true,
      error: null
    });
    try {
      const sessionsPolicy = await api.auth.getSessionConfigurations();
      setSessionsPolicyState({
        configurations: sessionsPolicy,
        loading: false
      });
    } catch (e) {
      actions.setSessionsState({
        error: e,
        loading: false
      });
    }
  };
  const createOrUpdateSessionsPolicy = async payload => {
    const {
        callback
      } = payload,
      body = (0, _objectWithoutPropertiesLoose2.default)(payload, _excluded);
    try {
      setSessionsPolicyState({
        loading: true,
        error: null
      });
      await api.auth.createOrUpdateSessionConfigrations(body);
      await actions.loadSessionsPolicy();
      callback == null ? void 0 : callback(true);
    } catch (e) {
      setSessionsPolicyState({
        error: e,
        loading: false
      });
    }
  };
  return {
    setSessionsPolicyState,
    resetSessionsPolicyState,
    loadSessionsPolicy,
    createOrUpdateSessionsPolicy
  };
};
exports.default = _default;