import { FronteggState, RestApi, SharedActions, WithCallback, WithRetryConfig } from '../../../interfaces';
import { SecurityCenterState, SecurityCenterStateIndicator } from './interfaces';
import { IForgotPassword, ISearchUserQueryParamsV3 } from '@frontegg/rest-api';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    setSecurityCenterState: (state: Partial<SecurityCenterState>) => void;
    resetSecurityCenterState: () => void;
    setSecurityCenterStateLoader: (payload: SecurityCenterStateIndicator) => void;
    setSecurityCenterStateError: (payload: SecurityCenterStateIndicator) => void;
    loadRecommendations: (payload?: WithRetryConfig<{}>) => Promise<void>;
    loadInsights: (payload?: WithRetryConfig<{}>) => Promise<void>;
    sendResetBreachedPasswordEmail: (_payload: WithCallback<IForgotPassword>) => Promise<void>;
    sendBulkResetBreachedPasswordEmails: (payload: WithCallback) => Promise<void>;
    loadBreachedPasswordUsers: (payload: ISearchUserQueryParamsV3) => Promise<void>;
    loadUnenrolledMfaUsers: (payload: ISearchUserQueryParamsV3) => Promise<void>;
    loadInactiveUsers: (payload: ISearchUserQueryParamsV3) => Promise<void>;
    markSecurityCenterStateAsChanged: (changed?: boolean) => void;
};
export default _default;
