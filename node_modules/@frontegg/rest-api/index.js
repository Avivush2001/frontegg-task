/** @license Frontegg v7.79.0
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { AuthStrategyEnum, EIdentifierType, MachineToMachineAuthStrategy, SocialLoginProviders } from './auth';
import { ISubscriptionCancellationPolicy, ISubscriptionStatus, PaymentMethodType, ProviderType } from './subscriptions';
import { FronteggApiError } from './error';
import fetch, { FetchClient } from './FetchClient';
import { ContextHolder, FronteggContext } from './ContextHolder';
import DefaultAuthenticationApi, { AuthenticationApi } from './auth';
import DefaultSecurityPolicyApi, { SecurityPolicyApi } from './auth/secutiry-poilicy';
import DefaultUsersApi, { UsersApi } from './users';
import DefaultTeamsApi, { TeamsApi } from './teams';
import DefaultMetadataApi, { MetadataApi } from './metadata';
import DefaultReportsApi, { ReportsApi } from './reports';
import DefaultConnectivityApi, { ConnectivityApi } from './connectivity';
import DefaultNotificationsApi, { NotificationsApi } from './notifications';
import DefaultAuditsApi, { AuditsApi } from './audits';
import DefaultTenantsApi, { TenantsApi } from './tenants';
import DefaultAccountSettingsApi, { AccountSettingsApi } from './account-settings';
import DefaultRolesApi, { RolesApi } from './roles';
import DefaultSubscriptionsApi, { SubscriptionsApi } from './subscriptions';
import DefaultVendorApi, { VendorApi } from './vendor';
import DefaultSubTenantsApi, { SubTenantsApi } from './sub-tenants';
import DefaultFeatureFlagsApi, { FeatureFlagsApi } from './feature-flags';
import DefaultDirectoryApi, { DirectoryApi } from './directory';
import DefaultImpersonateApi, { ImpersonateApi } from './impersonate';
import DefaultGroupsApi, { GroupsApi } from './groups';
import DefaultEntitlementsApi, { EntitlementsApi } from './entitlements';
import DefaultSecurityCenterApi, { SecurityCenterApi } from './security-center';
import DefaultPhoneNumbersApi, { PhoneNumbersApi } from './user-phone-numbers';
import DefaultApplicationsApi, { ApplicationsApi } from './applications';
import DefaultVeloApi, { VeloApi } from './velo';
import DefaultUsernamesApi, { UsernamesApi } from './usernames';
import DefaultUserEmailPolicyApi, { UserEmailPolicyApi } from './users-emails-policy';
export * from './interfaces';
export * from './auth/interfaces';
export * from './auth/enums';
export { setTabTenantInSessionStorage, getTabTenantFromSessionStorage, removeTabTenantFromSessionStorage, getCurrentUserTenantsFunction, FRONTEGG_SEPARATE_TABS_BY_TENANT } from './auth';
export * from './teams/interfaces';
export * from './metadata/interfaces';
export * from './reports/interfaces';
export * from './connectivity/interfaces';
export * from './notifications/interfaces';
export * from './audits/interfaces';
export * from './tenants/interfaces';
export * from './account-settings/interfaces';
export * from './roles/interfaces';
export * from './subscriptions/interfaces';
export * from './vendor/interfaces';
export * from './sub-tenants/interfaces';
export * from './routers';
export * from './feature-flags/index';
export * from './feature-flags/interfaces';
export * from './directory/index';
export * from './directory/interfaces';
export * from './impersonate/interfaces';
export * from './groups/interfaces';
export * from './groups/enums';
export * from './users/interfaces';
export * from './entitlements/interfaces';
export * from './security-center/interfaces';
export * from './user-phone-numbers/interfaces';
export * from './applications/interfaces';
export * from './velo/interfaces';
export * from './users-emails-policy/interfaces';
export { GENERIC_ERROR_CODE, GENERIC_ERROR_MESSAGE } from './constants';
/**
 * Frontegg API client for default app
 *
 * @deprecated use createApiClient instead
 */
const api = {
  auth: DefaultAuthenticationApi,
  securityPolicy: DefaultSecurityPolicyApi,
  teams: DefaultTeamsApi,
  metadata: DefaultMetadataApi,
  reports: DefaultReportsApi,
  connectivity: DefaultConnectivityApi,
  notifications: DefaultNotificationsApi,
  audits: DefaultAuditsApi,
  tenants: DefaultTenantsApi,
  accountSettings: DefaultAccountSettingsApi,
  roles: DefaultRolesApi,
  subscriptions: DefaultSubscriptionsApi,
  vendor: DefaultVendorApi,
  subTenants: DefaultSubTenantsApi,
  featureFlags: DefaultFeatureFlagsApi,
  directory: DefaultDirectoryApi,
  impersonate: DefaultImpersonateApi,
  groups: DefaultGroupsApi,
  users: DefaultUsersApi,
  entitlements: DefaultEntitlementsApi,
  securityCenter: DefaultSecurityCenterApi,
  userPhoneNumbers: DefaultPhoneNumbersApi,
  applications: DefaultApplicationsApi,
  velo: DefaultVeloApi,
  usernames: DefaultUsernamesApi,
  userEmailPolicy: DefaultUserEmailPolicyApi
};
const createApiClient = appName => ({
  auth: new AuthenticationApi(appName),
  securityPolicy: new SecurityPolicyApi(appName),
  teams: new TeamsApi(appName),
  metadata: new MetadataApi(appName),
  reports: new ReportsApi(appName),
  connectivity: new ConnectivityApi(appName),
  notifications: new NotificationsApi(appName),
  audits: new AuditsApi(appName),
  tenants: new TenantsApi(appName),
  accountSettings: new AccountSettingsApi(appName),
  roles: new RolesApi(appName),
  subscriptions: new SubscriptionsApi(appName),
  vendor: new VendorApi(appName),
  subTenants: new SubTenantsApi(appName),
  featureFlags: new FeatureFlagsApi(appName),
  directory: new DirectoryApi(appName),
  impersonate: new ImpersonateApi(appName),
  groups: new GroupsApi(appName),
  users: new UsersApi(appName),
  entitlements: new EntitlementsApi(appName),
  securityCenter: new SecurityCenterApi(appName),
  userPhoneNumbers: new PhoneNumbersApi(appName),
  applications: new ApplicationsApi(appName),
  velo: new VeloApi(appName),
  usernames: new UsernamesApi(appName),
  userEmailPolicy: new UserEmailPolicyApi(appName)
});
export { fetch, FetchClient, ContextHolder, FronteggContext, api, createApiClient, FronteggApiError, AuthStrategyEnum, SocialLoginProviders, ISubscriptionCancellationPolicy, ISubscriptionStatus, PaymentMethodType, ProviderType, MachineToMachineAuthStrategy, EIdentifierType };
export default {
  fetch,
  FetchClient,
  ContextHolder,
  FronteggContext,
  api,
  createApiClient,
  FronteggApiError,
  AuthStrategyEnum,
  MachineToMachineAuthStrategy,
  SocialLoginProviders,
  ISubscriptionCancellationPolicy,
  ISubscriptionStatus,
  PaymentMethodType,
  ProviderType,
  EIdentifierType
};