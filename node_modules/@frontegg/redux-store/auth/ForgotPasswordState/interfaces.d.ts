import type { EIdentifierType, IForgotPassword, IResetPassword, IPasswordRecoveryStrategy } from '@frontegg/rest-api';
import type { WithCallback } from '../../interfaces';
export declare enum ForgotPasswordStep {
    'forgotPassword' = "forgotPassword",
    'resetPasswordViaSms' = "resetPasswordViaSms",
    'passwordRecoverySelector' = "passwordRecoverySelector",
    'resetPasswordPage' = "resetPasswordPage",
    'forgotPasswordEmailSuccess' = "forgotPasswordEmailSuccess",
    'resetPasswordSuccess' = "resetPasswordSuccess"
}
export interface TestConfig {
    allowPassphrases: boolean;
    maxLength: number;
    minLength: number;
    minPhraseLength: number;
    minOptionalTestsToPass: number;
}
export interface ForgotPasswordState {
    step: ForgotPasswordStep;
    passwordConfig: Partial<TestConfig> | null;
    identifier: string;
    identifierType: EIdentifierType;
    loading: boolean;
    sessionId?: string;
    userId?: string;
    token?: string;
    error?: any;
    activeStrategies?: IPasswordRecoveryStrategy[];
}
export interface IForgotPasswordPayload extends WithCallback<IForgotPassword> {
    recaptchaToken?: string;
}
export interface IResetPasswordPayload extends WithCallback<IResetPassword> {
    recaptchaToken?: string;
}
export interface IDeterminePasswordRecoveryStrategyPayload {
    identifier: string;
    identifierType: EIdentifierType;
}
export type IVerifyPasswordViaSmsPayload = {
    otcToken: string;
};
