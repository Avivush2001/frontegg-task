import { useCallback } from 'react';
import getValue from 'get-value';
import { useStore } from '../FronteggStoreContext';
import { useSnapshot } from '../useSnapshot';
export function useCustomLoginState() {
  const state = useStore().store.auth.customLoginState;
  return useSnapshot(state);
}
export const useCustomLoginActions = () => {
  return useStore().stateActions.auth.customLoginActions;
};
export const useCustomLoginTheme = () => {
  var _useCustomLoginState$, _useCustomLoginState$2, _useCustomLoginState$3;
  const customLoginTheme = (_useCustomLoginState$ = useCustomLoginState().tenantMetadata) == null ? void 0 : (_useCustomLoginState$2 = _useCustomLoginState$.configuration) == null ? void 0 : (_useCustomLoginState$3 = _useCustomLoginState$2.themeV2) == null ? void 0 : _useCustomLoginState$3.loginBox;
  const getCustomLoginThemeValue = useCallback(path => {
    return path && customLoginTheme ? getValue(customLoginTheme, path) : customLoginTheme;
  }, [customLoginTheme]);
  return {
    customLoginTheme,
    getCustomLoginThemeValue
  };
};