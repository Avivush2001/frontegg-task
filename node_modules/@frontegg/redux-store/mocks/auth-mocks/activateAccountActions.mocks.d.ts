import { FronteggState, RestApi, SharedActions } from '../../interfaces';
declare const _default: (store: FronteggState, api: RestApi, actions: SharedActions) => {
    setActivateState: (state: Partial<import("../..").ActivateAccountState>) => void;
    resetActivateState: () => void;
    setActivateStrategyState: (state: Partial<import("../..").ActivateAccountState["activationStrategy"]>) => void;
    activateAccount: (_payload: import("../../interfaces").WithCallback<import("../..").IActivateAccountPayload>) => Promise<void>;
    preActivateAccount: (payload: import("../..").IPreActivateAccount) => Promise<void>;
    getActivateAccountStrategy: (payload: import("../../interfaces").WithCallback<import("dist/@frontegg/rest-api").IGetActivateAccountStrategy, import("dist/@frontegg/rest-api").IGetActivateAccountStrategyResponse>) => Promise<void>;
    resendActivationEmail: (payload: import("../../interfaces").WithCallback<import("dist/@frontegg/rest-api").IResendActivationEmail>) => Promise<void>;
    activateAccountWithCode: (_payload: import("../../interfaces").WithCallback<import("../..").IActivateAccountWithOTCPayload>) => Promise<void>;
};
export default _default;
