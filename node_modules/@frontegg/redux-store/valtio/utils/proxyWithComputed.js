import { proxy, snapshot } from '../valtio';
/**
 * proxyWithComputed (DEPRECATED)
 *
 * @deprecated Please follow "Computed Properties" guide in docs.
 */
export function proxyWithComputed_DEPRECATED(initialObject, computedFns) {
  // if (import.meta.env?.MODE !== 'production') {
  //   console.warn('proxyWithComputed is deprecated. Please follow "Computed Properties" guide in docs.');
  // }

  Object.keys(computedFns).forEach(key => {
    if (Object.getOwnPropertyDescriptor(initialObject, key)) {
      throw new Error('object property already defined');
    }
    const computedFn = computedFns[key];
    const {
      get,
      set
    } = typeof computedFn === 'function' ? {
      get: computedFn
    } : computedFn;
    const desc = {};
    desc.get = () => get(snapshot(proxyObject));
    if (set) {
      desc.set = newValue => set(proxyObject, newValue);
    }
    Object.defineProperty(initialObject, key, desc);
  });
  const proxyObject = proxy(initialObject);
  return proxyObject;
}