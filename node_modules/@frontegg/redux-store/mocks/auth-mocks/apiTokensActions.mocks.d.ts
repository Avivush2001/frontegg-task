import { FronteggState, RestApi, SharedActions, WithCallback, WithSilentLoad } from '../../interfaces';
import { AddTenantApiTokenPayload } from '../../auth/ApiTokensState/interfaces';
declare const _default: (store: FronteggState, api: RestApi, actions: SharedActions) => {
    setApiTokensLoader: (payload: import("../../auth").ApiStateIndicator) => void;
    setApiTokensError: (payload: import("../../auth").ApiStateIndicator) => void;
    setApiTokensState: (state: Partial<import("../../auth").ApiTokensState>) => void;
    resetApiTokensState: () => void;
    loadApiTokens: (payload?: WithSilentLoad<WithCallback>) => Promise<void>;
    loadUserApiTokens: (payload?: import("../../interfaces").WithRetryConfig<WithSilentLoad<WithCallback>>) => Promise<void>;
    loadTenantApiTokens: (payload?: import("../../interfaces").WithRetryConfig<WithSilentLoad<WithCallback>>) => Promise<void>;
    addTenantApiToken: (payload: AddTenantApiTokenPayload) => Promise<void>;
    addUserApiToken: (payload: import("../../auth").AddUserApiTokenPayload) => Promise<void>;
    deleteUserApiToken: (payload: string) => Promise<void>;
    deleteTenantApiToken: (payload: string) => Promise<void>;
};
export default _default;
