import { useEffect } from 'react';
import { useStore } from '../../FronteggStoreContext';
import { useSnapshot } from '../../useSnapshot';

// TODO: remove useless stateMapper, valtio already does this

const defaultMapper = state => state;
// @deprecated use useSecurityPolicyState() instead
export function useSecurityPolicyState(stateMapper = defaultMapper) {
  const state = useStore().store.auth.securityPolicyState;
  return stateMapper(useSnapshot(state));
}
export const useSecurityPolicyActions = () => {
  return useStore().stateActions.auth.securityPolicyActions;
};
export const usePublicPolicySettings = (loadOnMount = false) => {
  const {
    publicPolicy
  } = useSecurityPolicyState();
  const {
    loadPublicSecurityPolicy
  } = useSecurityPolicyActions();
  useEffect(() => {
    (loadOnMount || !publicPolicy.policy) && loadPublicSecurityPolicy();
  }, [loadOnMount, loadPublicSecurityPolicy]);
  return publicPolicy;
};
export const usePublicAuthStrategiesPolicySettings = (loadOnMount = false) => {
  const {
    publicAuthStrategyPolicy
  } = useSecurityPolicyState();
  const {
    loadPublicAuthStrategiesPolicy
  } = useSecurityPolicyActions();
  useEffect(() => {
    (loadOnMount || !publicAuthStrategyPolicy.policy) && !publicAuthStrategyPolicy.error && loadPublicAuthStrategiesPolicy();
  }, [loadOnMount, loadPublicAuthStrategiesPolicy]);
  return publicAuthStrategyPolicy;
};