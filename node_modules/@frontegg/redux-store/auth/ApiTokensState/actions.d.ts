import { FronteggState, WithCallback, SharedActions, RestApi, WithSilentLoad, WithRetryConfig } from '../../interfaces';
import { AddTenantApiTokenPayload, AddUserApiTokenPayload, ApiStateIndicator, ApiTokensState } from './interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    setApiTokensLoader: (payload: ApiStateIndicator) => void;
    setApiTokensError: (payload: ApiStateIndicator) => void;
    setApiTokensState: (state: Partial<ApiTokensState>) => void;
    resetApiTokensState: () => void;
    loadApiTokens: (payload?: WithSilentLoad<WithCallback>) => Promise<void>;
    loadUserApiTokens: (payload?: WithRetryConfig<WithSilentLoad<WithCallback>>) => Promise<void>;
    loadTenantApiTokens: (payload?: WithRetryConfig<WithSilentLoad<WithCallback>>) => Promise<void>;
    addTenantApiToken: (payload: AddTenantApiTokenPayload) => Promise<void>;
    addUserApiToken: (payload: AddUserApiTokenPayload) => Promise<void>;
    deleteUserApiToken: (payload: string) => Promise<void>;
    deleteTenantApiToken: (payload: string) => Promise<void>;
};
export default _default;
