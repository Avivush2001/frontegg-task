import { CSSProperties, Color } from '../Common';
export type PaletteGrey = {
    '50': Color;
    '100': Color;
    '150': Color;
    '200': Color;
    '300': Color;
    '400': Color;
    '500': Color;
    '600': Color;
    '700': Color;
    '800': Color;
};
export type PaletteGreyOptions = Partial<PaletteGrey>;
export type CommonColors = {
    black: Color;
    white: Color;
    cyanBlue: Color;
    green: Color;
    paleLightYellow: Color;
    orange: Color;
};
export type CommonColorsOptions = Partial<CommonColors>;
export type PaletteColor = {
    light: Color;
    main: Color;
    dark: Color;
    hover: Color;
    active: Color;
    contrastText: Color;
};
export type PaletteColorOptions = Partial<PaletteColor>;
export interface PaletteSeverityColor extends Omit<PaletteColor, 'hover' | 'active'> {
    border: CSSProperties['border'];
}
export type PaletteSeverityColorOptions = Partial<PaletteSeverityColor>;
export interface IconColor {
    action: Color;
    input: Color;
}
export type IconColorOptions = Partial<IconColor>;
export interface TypeText {
    primary: Color;
    secondary: Color;
    disabled: Color;
}
export type TypeTextOptions = Partial<TypeText>;
export interface BackgroundStyle {
    default: Color;
    paper: Color;
}
export type BackgroundStyleOptions = Partial<BackgroundStyle>;
export interface ThemePaletteOptions {
    default?: PaletteColorOptions;
    primary?: PaletteColorOptions;
    secondary?: PaletteColorOptions;
    danger?: PaletteColorOptions;
    success?: PaletteSeverityColorOptions;
    info?: PaletteSeverityColorOptions;
    warning?: PaletteSeverityColorOptions;
    error?: PaletteSeverityColorOptions;
    common?: CommonColorsOptions;
    grey?: PaletteGreyOptions;
    background?: BackgroundStyleOptions;
    text?: TypeTextOptions;
    icon?: IconColorOptions;
    switchButton?: PaletteColorOptions;
    divider?: Color;
    loader?: Color;
}
export interface ThemePalette {
    default: PaletteColor;
    primary: PaletteColor;
    secondary: PaletteColor;
    danger: PaletteColor;
    success: PaletteSeverityColor;
    info: PaletteSeverityColor;
    warning: PaletteSeverityColor;
    error: PaletteSeverityColor;
    common: CommonColors;
    grey: PaletteGrey;
    background: BackgroundStyle;
    text: TypeText;
    icon: IconColor;
    switchButton: PaletteColor;
    divider: Color;
    loader: Color;
}
