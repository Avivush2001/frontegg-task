"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  isMfaRequired: true,
  isResetPasswordRequired: true,
  mapMetaDataObjectToActions: true,
  getUri: true,
  prepareIdentifiersForSignup: true,
  isAuthRoute: true
};
exports.prepareIdentifiersForSignup = exports.mapMetaDataObjectToActions = exports.isResetPasswordRequired = exports.isMfaRequired = exports.isAuthRoute = exports.getUri = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _restApi = require("@frontegg/rest-api");
var _consts = require("./LoginState/consts");
var _helpers = require("./Entitlements/helpers");
Object.keys(_helpers).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _helpers[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _helpers[key];
    }
  });
});
var _helpers2 = require("./LoginState/helpers");
Object.keys(_helpers2).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _helpers2[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _helpers2[key];
    }
  });
});
var _helpers3 = require("./StepUpState/helpers");
Object.keys(_helpers3).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _helpers3[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _helpers3[key];
    }
  });
});
const _excluded = ["phoneNumber", "email"],
  _excluded2 = ["authenticatedUrl"];
const isMfaRequired = (user, appName) => {
  const contextHolder = _restApi.ContextHolder.for(appName);
  if (user.mfaRequired && user.mfaToken) {
    contextHolder.setAccessToken(null);
    contextHolder.setUser(null);
    return true;
  }
  contextHolder.setAccessToken(user.accessToken);
  contextHolder.setUser(user);
  return false;
};
exports.isMfaRequired = isMfaRequired;
const isResetPasswordRequired = (user, appName) => {
  const contextHolder = _restApi.ContextHolder.for(appName);
  if (user.resetPasswordToken) {
    contextHolder.setAccessToken(null);
    return true;
  }
  contextHolder.setAccessToken(user.accessToken);
  contextHolder.setUser(user);
  return false;
};
exports.isResetPasswordRequired = isResetPasswordRequired;
const mapMetaDataObjectToActions = (obj, path = []) => {
  return Object.entries(obj).reduce((acc, [key, value]) => {
    if (typeof value === 'object') {
      return [...acc, ...mapMetaDataObjectToActions(value, [...path, key])];
    }
    return [...acc, {
      type: [...path, key].join('/'),
      payload: value
    }];
  }, []);
};
exports.mapMetaDataObjectToActions = mapMetaDataObjectToActions;
const getUri = urlStrategy => {
  if (urlStrategy === 'path') {
    var _window;
    return ((_window = window) != null ? _window : document).location.pathname;
  } else {
    var _window2;
    const uri = (((_window2 = window) != null ? _window2 : document).location.hash || '#').substring(1);
    if (uri.indexOf('?') !== -1) {
      return uri.substring(0, uri.indexOf('?'));
    } else {
      return uri;
    }
  }
};
exports.getUri = getUri;
const prepareIdentifiersForSignup = payload => {
  const {
      phoneNumber,
      email
    } = payload,
    finalDto = (0, _objectWithoutPropertiesLoose2.default)(payload, _excluded);
  if (email != null && email.length) {
    Object.assign(finalDto, {
      email
    });
  }
  if (phoneNumber != null && phoneNumber.length) {
    Object.assign(finalDto, {
      phoneNumber
    });
  }
  return finalDto;
};
exports.prepareIdentifiersForSignup = prepareIdentifiersForSignup;
const isAuthRoute = (path, routes) => {
  const _defaultFronteggRoute = (0, _extends2.default)({}, _consts.defaultFronteggRoutes, routes),
    authRoutes = (0, _objectWithoutPropertiesLoose2.default)(_defaultFronteggRoute, _excluded2);
  return Object.values(authRoutes).includes(path);
};
exports.isAuthRoute = isAuthRoute;