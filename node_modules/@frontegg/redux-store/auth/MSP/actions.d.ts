import { FronteggState, RestApi, SharedActions } from '../../interfaces';
import { AllAccountsStateIndicator, IAllAccountsState, IAllAccountsStateActionsPayloads } from './interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    setAllAccountsLoader: (payload: AllAccountsStateIndicator) => void;
    setAllAccountsError: (payload: AllAccountsStateIndicator) => void;
    setAllAccountsState: (state: Partial<IAllAccountsState>) => void;
    setSelectedAccountState: (payload: Partial<IAllAccountsState["selectedAccount"]>) => void;
    resetAllAccountsState: () => void;
    clearSelectedAccount: () => void;
    loadAccounts: (payload: IAllAccountsStateActionsPayloads["loadAccounts"]) => Promise<void>;
    searchAccounts: (payload: IAllAccountsStateActionsPayloads["searchAccounts"]) => Promise<void>;
    updateSubAccountAccessForUser: (payload: IAllAccountsStateActionsPayloads["updateSubAccountAccessForUser"]) => Promise<void>;
    createSubAccount: (payload: IAllAccountsStateActionsPayloads["createSubAccount"]) => Promise<void>;
    updateSubAccount: (payload: IAllAccountsStateActionsPayloads["updateSubAccount"]) => Promise<void>;
    deleteSubAccount: (payload: IAllAccountsStateActionsPayloads["deleteSubAccount"]) => Promise<void>;
    updateSubAccountSettings: (payload: IAllAccountsStateActionsPayloads["updateSubAccountSettings"]) => Promise<void>;
    updateSubAccountManagement: (payload: IAllAccountsStateActionsPayloads["updateSubAccountManagement"]) => Promise<void>;
    updateSubAccountHierarchySettings: (payload: IAllAccountsStateActionsPayloads["updateSubAccountHierarchySettings"]) => Promise<void>;
    addUsersToAccount: (payload: IAllAccountsStateActionsPayloads["addUsersToAccount"]) => Promise<void>;
    getAccountUsers: (payload: IAllAccountsStateActionsPayloads["getAccountUsers"]) => Promise<void>;
    deleteUsersFromAccount: (payload: IAllAccountsStateActionsPayloads["deleteUsersFromAccount"]) => Promise<void>;
    setUserRolesForSubAccount: (payload: IAllAccountsStateActionsPayloads["setUserRolesForSubAccount"]) => Promise<void>;
    getUserJwtForSubAccount: (payload: IAllAccountsStateActionsPayloads["getUserJwtForSubAccount"]) => Promise<void>;
    setRootAccountData: () => Promise<void>;
    setSelectedSubAccountData: (payload: IAllAccountsStateActionsPayloads["setSelectedSubAccountData"]) => Promise<void>;
    loadNumberOfUsersForSelectedSubAccount: (payload: IAllAccountsStateActionsPayloads["loadNumberOfUsersForSelectedSubAccount"]) => Promise<void>;
};
export default _default;
