import { EntitledToOptions, Entitlement } from './interfaces';
import type { UserEntitlementsContext as UserEntitlementsResponseV2 } from '@frontegg/entitlements-javascript-commons';
import type { Attributes } from '@frontegg/entitlements-javascript-commons';
/**
 @param entitlements
 @param key permission key
 @param attributes entitlements query attributes including consumer and frontegg attributes
 @param isV2 not in use. should be removed after removing from frontegg-vue
 @returns if the user is entitled to the given permission. Attaching the justification if not
 @throws when entitlement is not enabled via frontegg options
 */
export declare const getPermissionEntitlements: (entitlements: UserEntitlementsResponseV2 | undefined, key: string, attributes?: Attributes, isV2?: boolean, appName?: string) => Entitlement;
/**
 @param entitlements
 @param key feature key
 @param attributes entitlements query attributes including consumer and frontegg attributes
 @param isV2 not in use. should be removed after removing from frontegg-vue
 @param appName
 @returns if the user is entitled to the given feature. Attaching the justification if not
 @throws when entitlement is not enabled via frontegg options
 */
export declare const getFeatureEntitlements: (entitlements: UserEntitlementsResponseV2 | undefined, key: string, attributes?: Attributes, isV2?: boolean, appName?: string) => Entitlement;
/**
 @param entitlements
 @param options including permission or feature
 @param attributes entitlements query attributes including consumer and frontegg attributes
 @param isV2 not in use. should be removed after removing from frontegg-vue
 @param appName
 @returns if the user is entitled to the given feature or permission (check only one). Attaching the justification if not
 @throws when entitlement is not enabled via frontegg options
 */
export declare const getEntitlements: (entitlements: UserEntitlementsResponseV2 | undefined, options: EntitledToOptions, attributes?: Attributes, isV2?: boolean, appName?: string) => Entitlement;
/**
 * @param oldEntitlements
 * @param newEntitlements
 * @returns true when old and new entitlements are deeply equal
 */
export declare function isEntitlementsDeeplyEqual(oldEntitlements: UserEntitlementsResponseV2 | undefined, newEntitlements: UserEntitlementsResponseV2 | undefined): boolean;
