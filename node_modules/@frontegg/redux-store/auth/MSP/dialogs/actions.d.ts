import { FronteggState, RestApi, SharedActions } from '../../../interfaces';
import { IAllAccountsDialogsState, TAddUsersToSubAccountDialogState, TCreateSubAccountDialogState, TDeleteSubAccountDialogState, TDeleteUserFromSubAccountDialogState, TEditUserRolesDialogState, TUpdateAccountDialogState, TUpdateSubAccountHierarchySettingsDialogState, TUpdateSubAccountManagementState } from '../interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    setAllAccountDialogsState: (payload: Partial<IAllAccountsDialogsState>) => void;
    resetAllAccountDialogsState: () => void;
    openCreateSubAccountDialog: (payload: Partial<TCreateSubAccountDialogState>) => void;
    closeCreateSubAccountDialog: () => void;
    openUpdateSubAccountDialog: (payload: Partial<TUpdateAccountDialogState>) => void;
    closeUpdateSubAccountDialog: () => void;
    openEnableSubAccountManagementDialog: (payload: Partial<TUpdateSubAccountManagementState>) => void;
    closeEnableSubAccountManagementDialog: () => void;
    openUpdateSubAccountHierarchySettingsDialog: (payload: Partial<TUpdateSubAccountHierarchySettingsDialogState>) => void;
    closeUpdateSubAccountHierarchySettingsDialog: () => void;
    openDisableSubAccountManagementDialog: (payload: Partial<TUpdateSubAccountManagementState>) => void;
    closeDisableSubAccountManagementDialog: () => void;
    openDeleteSubAccountDialog: (payload: Partial<TDeleteSubAccountDialogState>) => void;
    closeDeleteSubAccountDialog: () => void;
    openAddUsersToAccountDialog: (payload: Partial<TAddUsersToSubAccountDialogState>) => void;
    closeAddUsersToAccountDialog: () => void;
    openDeleteUserFromAccountDialog: (payload: Partial<TDeleteUserFromSubAccountDialogState>) => void;
    closeDeleteUserFromAccountDialog: () => void;
    openEditUserRolesDialog: (payload: Partial<TEditUserRolesDialogState>) => void;
    closeEditUserRolesDialog: () => void;
};
export default _default;
