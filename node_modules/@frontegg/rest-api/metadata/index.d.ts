import { CommitChangesRequest, IAuditsMetadata, IMetadataIp, INotificationMetadata, ISamlMetadata } from './interfaces';
import { BaseApiClient } from '../BaseApiClient';
export declare class MetadataApi extends BaseApiClient {
    constructor(appName: string);
    /**
     * Retrieves metadata based on the given criteria.
     *
     * @param body - Metadata request parameters.
     * @returns Metadata matching the criteria.
     * @throws Will throw an error if metadata is not found.
     */
    private getMetadata;
    /**
     * Retrieves admin box metadata.
     *
     * @returns Admin box metadata.
     */
    getAdminBoxMetadata: () => Promise<unknown>;
    /**
     * Updates admin box metadata.
     *
     * @param body - Request body for committing changes.
     * @returns Response from the POST request.
     */
    updateAdminBoxMetadata: (body: CommitChangesRequest) => Promise<unknown>;
    /**
     * Retrieves IP metadata for a given IP address.
     *
     * @param ip - IP address to get metadata for.
     * @returns IP metadata.
     * @throws Will throw an error if IP metadata is not found.
     */
    private getIpMetadata;
    /**
     * Retrieves current user IP metadata.
     *
     * @returns Current user IP metadata.
     * @throws Will throw an error if IP metadata is not found.
     */
    getCurrentUserIpMetadata: () => Promise<IMetadataIp>;
    /**
     * Retrieves notifications metadata.
     *
     * @returns Notifications metadata.
     */
    getNotificationsMetadata: () => Promise<INotificationMetadata>;
    /**
     * Retrieves SAML metadata.
     *
     * @returns SAML metadata.
     */
    getSamlMetadata: () => Promise<ISamlMetadata>;
    /**
     * Retrieves audits metadata.
     *
     * @returns Audits metadata.
     */
    getAuditsMetadata: () => Promise<IAuditsMetadata>;
    /**
     * Retrieves IP address metadata for a given IP.
     *
     * @param ip - IP address to get metadata for.
     * @returns IP address metadata.
     */
    getIpAdressMetadata: (ip: string) => Promise<IMetadataIp>;
}
declare const _default: MetadataApi;
export default _default;
