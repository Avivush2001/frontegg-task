"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTenantRotationPeriod = getTenantRotationPeriod;
/**
 * Calculates the tenant rotation period.
 *
 * Returns the minimum of vendor and tenant rotation periods if both are provided.
 * If only one is provided, returns that one. Returns undefined if neither is provided.
 * This calculation is made to get the stricter of the two rotation periods.
 *
 * @param vendorRotationPeriod - Vendor's rotation period (optional).
 * @param tenantRotationPeriod - Tenant's rotation period (optional).
 * @returns The rotation period, or undefined if neither is provided.
 */
function getTenantRotationPeriod(vendorRotationPeriod, tenantRotationPeriod) {
  const tenantRotationExists = tenantRotationPeriod !== null && tenantRotationPeriod !== undefined;
  const vendorRotationExists = vendorRotationPeriod !== null && vendorRotationPeriod !== undefined;
  if (!tenantRotationExists && !vendorRotationExists) {
    return;
  }
  if (!tenantRotationExists) {
    return vendorRotationPeriod;
  }
  if (!vendorRotationExists) {
    return tenantRotationPeriod;
  }
  return Math.min(vendorRotationPeriod, tenantRotationPeriod);
}