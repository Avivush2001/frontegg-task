import { FronteggState, RestApi, SharedActions } from '../../../interfaces';
declare const _default: (store: FronteggState, api: RestApi, sharedActions: SharedActions) => {
    loadSSOConfigurationsV2: (payload?: import("../../../interfaces").WithRetryConfig<{}>) => Promise<void>;
    saveSSOConfigurationV2: (payload: import("../interfaces").SaveSSOConfigurationPayloadV2) => Promise<void>;
    updateSSOConfiguration: (payload: import("../interfaces").UpdateSSOConfigurationPayload) => Promise<void>;
    deleteSSOConfiguration: (payload: import("../interfaces").DeleteSSOConfigurationPayload) => Promise<void>;
    saveSSODomain: (payload: import("../interfaces").SaveSSODomainPayload) => Promise<void>;
    deleteSSODomain: (payload: import("../interfaces").ValidateSSODomainPayload) => Promise<void>;
    validateSSODomainV2: (payload: import("../interfaces").ValidateSSODomainPayload) => Promise<void>;
    setSSOGroups: (payload: import("../interfaces").SetSSOGroupsPayload) => Promise<void>;
    updateSSOGroups: (payload: import("../interfaces").UpdateSSOGroupsPayload) => Promise<void>;
    setSSODefaultRoles: (payload: import("../interfaces").UpdateSSODefaultRolesPayload) => Promise<void>;
    saveSSOConfigurationByMetadata: (payload: import("../interfaces").SaveSSOConfigurationByMetadataPayload) => Promise<void>;
    updateSSOConfigurationByMetadata: (payload: import("../interfaces").UpdateSSOConfigurationByMetadataPayload) => Promise<void>;
    saveSSOConfigurationByUrl: (payload: import("../interfaces").SaveSSOConfigurationByUrlPayload) => Promise<void>;
    saveSSOConfigurationByData: (payload: import("../interfaces").SaveSSOConfigurationByDataPayload) => Promise<void>;
    setSSOState: (state: Partial<import("../interfaces").SSOState>) => void;
    resetSSOState: () => void;
    setSSOLoader: (payload: import("../interfaces").SSOStateIndicator) => void;
    setSSOError: (payload: import("../interfaces").SSOStateIndicator) => void;
    loadSSOConfigurations: () => Promise<void>;
    saveSSOConfigurations: (payload: import("../interfaces").SaveSSOConfigurationPayload) => Promise<void>;
    saveSSOConfigurationsFile: (configFile: File[]) => Promise<void>;
    saveSSOConfigurationsFileWithCallback: (payload: import("../interfaces").SaveSSOConfigurationFilePayload) => Promise<void>;
    validateSSODomain: (payload?: import("../../../interfaces").WithCallback) => Promise<void>;
    loadSSOAuthorizationRoles: () => Promise<void>;
    updateSSOAuthorizationRoles: (payload: import("../interfaces").UpdateSSOAuthorizationRolesPayload) => Promise<void>;
    deleteSamlGroup: (payload: import("../interfaces").DeleteSamlGroupPayload) => Promise<void>;
    createSamlGroup: (payload: import("../interfaces").CreateSamlGroupPayload) => Promise<void>;
    oidcPostlogin: (payload: import("dist/@frontegg/rest-api").IOidcPostLogin) => Promise<void>;
};
export default _default;
