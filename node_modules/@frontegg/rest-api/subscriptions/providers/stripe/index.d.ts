import { ICreateStripeCustomerRequest, ICreateStripeCustomerResponse, ICreateStripeSubscriptionRequest, ICreateSubscriptionResponse, IStripeCustomerResponse, IStripePaymentProviderConfigurationResponse, ICreateStripePaymentMethodSetupRequest, ICreateStripePaymentMethodSetupResponse } from './interfaces';
import { BaseApiClient } from '../../../BaseApiClient';
export declare class StripeProviderApi extends BaseApiClient {
    /**
     * Creates new stripe subscription
     * @param request
     */
    createSubscription: (request: ICreateStripeSubscriptionRequest) => Promise<ICreateSubscriptionResponse>;
    /**
     * Fetch tenant mapping external stripe customer object
     */
    getStripeCustomer: (tenantId: string) => Promise<IStripeCustomerResponse>;
    /**
     * Create tenant mapping external stripe customer object
     * @param request
     */
    createStripeCustomer: (request: ICreateStripeCustomerRequest) => Promise<ICreateStripeCustomerResponse>;
    getStripePaymentProviderConfiguration: () => Promise<IStripePaymentProviderConfigurationResponse>;
    /**
     * Create payment method intent secret
     * @param request
     */
    createStripePaymentMethodSetupIntentSecret: (request: ICreateStripePaymentMethodSetupRequest) => Promise<ICreateStripePaymentMethodSetupResponse>;
}
